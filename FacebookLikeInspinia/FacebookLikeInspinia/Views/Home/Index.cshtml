@using FacebookLikeInspinia.ViewModels.Home
@using Microsoft.AspNet.Identity

@model HomeIndexViewModel
<div class="wrapper wrapper-content">
    <div class="row justify-content-md-center animated fadeInRight">
        <div class="col-md-3">
            @Html.Partial("_BasicUserInfo")
            @Html.Partial("_FollowersAndFriends")
        </div>
        <div class="col-lg-9">
            <div class="social-feed-box">
                <div class="social-body">
                    <div class="media-body">
                        <textarea class="form-control" placeholder="What are you thinking?" id="new-post-content-textarea"></textarea>
                    </div>
                    <div class="media-body" style="margin-top: 0.5%">
                        <button class="btn btn-primary pull-right" type="button" id="post-btn" data-user-id="@User.Identity.GetUserId()"><i class="fa fa-paper-plane"></i> Post</button>
                    </div>
                </div>
            </div>
            @Html.Partial("_PostsPartial", Model.Posts)
        </div>
    </div>
</div>
@section scripts{
    <script>
        var postHtmlTemplate = `
                              <div class="social-feed-box">
                                <div class="social-avatar">
                                    <a href="" class="pull-left">
                                        <img alt="image" src="/img/a4.jpg">
                                    </a>
                                    <div class="media-body">
                                        <a href="#">
                                            Andrew Williams
                                        </a>
                                        <small class="text-muted">Today 4:21 pm - 12.06.2014</small>
                                    </div>
                                </div>
                                <div class="social-body">
                                    <p>
                                        Packages and web page editors now use Lorem Ipsum as their
                                        default model text. Page editors now use Lorem Ipsum as their
                                        default model text.
                                    </p>
                                    <div class="btn-group">
                                        <button class="btn btn-white btn-xs"><i class="fa fa-thumbs-up"></i> Like this!</button>
                                        <button class="btn btn-white btn-xs comment-btn"><i class="fa fa-comments"></i> Comment</button>
                                    </div>
                                </div>
                                <div class="social-footer" style="display:none"><div class="comment-list"></div>
                            </div>`;

        var commentBox = `
                                        <div class="social-comment">
                                            <a href="" class="pull-left">
                                                <img alt="image" src="/img/a3.jpg">
                                            </a>
                                            <div class="media-body">
                                                <textarea class="form-control input-comment-box-texarea"  placeholder="Write comment..."></textarea>
                                            </div>
                                        </div>`;

        var commentItemTemplate = `
                                         <div class="social-comment">
                                                <a href="" class="pull-left">
                                                    <img alt="image" src="/img/a2.jpg">
                                                </a>
                                                <div class="media-body">
                                                    <a href="#">
                                                        William Bello
                                                    </a>
                                                    Dynamic comment
                                                    <br/>
                                                    <a class="small"><i class="fa fa-thumbs-up"></i> 11 Like this!</a> -
                                                    <small class="text-muted">10.07.2014</small>
                                                </div>
                                            </div>`;

        $(function () {
            console.log("realConnection")
            var hub = $.connection.notificationHub;
            function getParsedPostTemplate(postJsonModel) {

                var postTemplate = `
                                      <div class="social-feed-box" date-post-id="${postJsonModel.PostId}">
                                        <div class="social-avatar">
                                            <a href="" class="pull-left">
                                                <img alt="image" src="/img/a4.jpg">
                                            </a>
                                            <div class="media-body">
                                                <a href="#">
                                                    ${postJsonModel.UserFullName}
                                                </a>
                                                <small class="text-muted">${postJsonModel.JsonParsedCreatedAt}</small>
                                            </div>
                                        </div>
                                        <div class="social-body">
                                            <p>
                                                ${postJsonModel.Content}
                                            </p>
                                            <div class="btn-group">
                                                <button class="btn btn-white btn-xs like-action" data-post-id="${postJsonModel.PostId}"  ><i class="fa fa-thumbs-up" ></i><span class="like-action-count"></span> Like this!</button>
                                                <button class="btn btn-white btn-xs comment-btn data-post-id="${postJsonModel.PostId}""><i class="fa fa-comments" ></i> Comment</button>
                                            </div>
                                        </div>
                                        <div class="social-footer" style="display:none"><div class="comment-list"></div>
                                    </div>`;

                return postTemplate;
            }

            function getParsedCommentTemplate(commentJsonModel) {
                var commentItemTemplate = `
                                <div class="social-comment" data-comment-id="${commentJsonModel.CommentId}">
                                    <a href="" class="pull-left">
                                        <img alt="image" src="/img/a2.jpg">
                                    </a>
                                    <div class="media-body">
                                        <a href="#">
                                            ${commentJsonModel.CommentedByFullName}
                                        </a>
                                        ${commentJsonModel.Content}
                                        <br/>
                                        <a href="#" class="small text-muted like-action"><i class="fa fa-thumbs-up" data-comment-id="${commentJsonModel.CommentId}"></i><span class="like-action-count"></span> Like this!</a> -
                                        <small class="text-muted">${commentJsonModel.JsonParsedCreatedAt}</small>
                                    </div>
                                </div>`;

                return commentItemTemplate;
            }

            function getParsedCommentBoxTemplate(postId) {
                var commentBox = `
                            <div class="social-comment">
                                <a href="" class="pull-left">
                                    <img alt="image" src="/img/a3.jpg">
                                </a>
                                <div class="media-body">
                                    <textarea data-post-id="${postId}" class="form-control input-comment-box-texarea"  placeholder="Write comment..."></textarea>
                                </div>
                            </div>`;

                return commentBox;
            }

            hub.client.showSavedPost = function (postJsonModel) {
                console.log(postJsonModel);
                var template = getParsedPostTemplate(postJsonModel);
                $(template).hide().prependTo("#post-list-container").fadeIn("slow");
            }

            hub.client.showSavedComment = function (commentJsonModel) {
                var parsedTemplate = getParsedCommentTemplate(commentJsonModel);
                var post = $("#post-list-container").find(`div.social-feed-box [data-post-id='${commentJsonModel.PostId}']`);
                console.log(post);
                var commentList = post.closest(".social-footer").find(".comment-list");
                $(parsedTemplate).hide().appendTo(commentList).fadeIn("slow");
            }


            $("#post-btn").on('click',
                function () {
                    var selft = $(this);
                    selft.addClass("disabled");
                    var userId = $(this).attr('data-user-id');
                    var content = $("#new-post-content-textarea").val();
                    postViewModel = { UserId: userId, BodyContent: content };
                    $.connection.hub.start().done(function () {
                        console.log("connection stablished")
                        hub.server.savePost(postViewModel)
                            .done(function () {
                                selft.removeClass("disabled");
                                $("#new-post-content-textarea").val("");
                        }).fail(function (error) {
                            console.log('Invocation failed. Error: ' + error);
                        });
                    });

                });

            $('body').on('click', 'button.comment-btn', function (e) {
                // do something
                $(this).hide();
                var postId = $(this).attr("data-post-id");
                var parsedCommentBox = getParsedCommentBoxTemplate(postId);
                var socialFooter = $(e.target).closest(".social-feed-box").find(".social-footer");
                socialFooter.show();
                $(parsedCommentBox).hide().appendTo(socialFooter).fadeIn("slow").find("textarea").focus();
            });

            $('body').on('keypress', 'textarea.input-comment-box-texarea', function (e) {
                if (e.which === 13) {
                    var self = $(this);
                    //Disable textbox to prevent multiple submit
                    $(this).attr("disabled", "disabled");
                    var postId = $(this).attr("data-post-id");
                    var content = $(this).val();
                    var userId = '@User.Identity.GetUserId()';

                    var commentViewModel = { Content: content, PostId: postId, OwnerId: userId };
                    console.log(commentViewModel);

                    $.connection.hub.start().done(function () {
                        console.log("connection stablished")
                        hub.server.saveComment(commentViewModel)
                            .done(function () {
                                //Enable the textbox again if needed.
                                self.val("");
                                self.removeAttr("disabled");
                            }).fail(function (error) {
                                console.log('Invocation failed. Error: ' + error);
                            });
                    });                 
                }
            });

            $('body').on('click', 'button.like-action', function (e) {
                console.log("like post");
                $(this).removeClass("text-muted");
                $(this).addClass("text-success");
                var likeActionCountContainer = $(this).closest(".like-action-count");
                console.log(likeActionCountContainer)
                var count = likeActionCountContainer.text();
                var increasedCount = +count + 1;
                likeActionCountContainer.text(increasedCount);
            });

            $('body').on('click', 'a.like-action', function (e) {
                console.log("like comment");
                $(this).removeClass("text-muted");
                $(this).addClass("text-success");
                var likeActionCountContainer = $(this).closest(".like-action-count");
                console.log(likeActionCountContainer)
                var count = likeActionCountContainer.text();
                var increasedCount = +count + 1;
                likeActionCountContainer.text(increasedCount);
            });

        });
    </script>
}